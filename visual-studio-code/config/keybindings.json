// Place your key bindings in this file to overwrite the defaults
[
    {
        "key": "ctrl+shift+5",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+u",
        "command": "editor.action.transformToUppercase"
    },
    {
        "key": "ctrl+k ctrl+l",
        "command": "editor.action.transformToLowercase"
    },
    {
        "key": "ctrl+e ctrl+d",
        "command": "editor.action.deleteLines",
        "when": "editorTextFocus && !editorReadOnly"
    },
    {
        "key": "ctrl+backspace",
        "command": "deleteWordLeft",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+delete",
        "command": "deleteWordRight",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+r ctrl+d",
        "command": "editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+r ctrl+s",
        "command": "editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorHasSelection && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+alt+right",
        "command": "editor.action.indentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+alt+left",
        "command": "editor.action.outdentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+l",
        "command": "editor.action.selectHighlights",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+space",
        "command": "editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "key": "ctrl+e ctrl+z",
        "command": "editor.fold",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+e ctrl+e",
        "command": "editor.unfold",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k m",
        "command": "workbench.action.editor.changeLanguageMode"
    },
    {
        "key": "ctrl+k p",
        "command": "workbench.action.files.copyPathOfActiveFile"
    },
    {
        "key": "ctrl+k r",
        "command": "workbench.action.files.revealActiveFileInWindows"
    },
    {
        "key": "ctrl+k o",
        "command": "workbench.action.files.showOpenedFileInNewWindow"
    },
    {
        "key": "ctrl+k ctrl+right",
        "command": "workbench.action.focusNextGroup"
    },
    {
        "key": "ctrl+k ctrl+left",
        "command": "workbench.action.focusPreviousGroup"
    },
    {
        "key": "ctrl+0",
        "command": "workbench.action.focusSideBar"
    },
    {
        "key": "ctrl+g",
        "command": "workbench.action.gotoLine"
    },
    {
        "key": "ctrl+shift+o",
        "command": "workbench.action.gotoSymbol"
    },
    {
        "key": "ctrl+k left",
        "command": "workbench.action.moveActiveEditorGroupLeft"
    },
    {
        "key": "ctrl+k right",
        "command": "workbench.action.moveActiveEditorGroupRight"
    },
    {
        "key": "ctrl+alt+right",
        "command": "workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "ctrl+alt+left",
        "command": "workbench.action.moveEditorToPreviousGroup"
    },
    {
        "key": "ctrl+pagedown",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "ctrl+r",
        "command": "workbench.action.openRecent"
    },
    {
        "key": "ctrl+k ctrl+h",
        "command": "workbench.action.output.toggleOutput"
    },
    {
        "key": "ctrl+shift+t",
        "command": "workbench.action.reopenClosedEditor"
    },
    {
        "key": "ctrl+k ctrl+t",
        "command": "workbench.action.selectTheme"
    },
    {
        "key": "ctrl+k ctrl+s",
        "command": "workbench.action.splitEditor"
    },
    {
        "key": "ctrl+alt+t",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "ctrl+shift+d",
        "command": "workbench.view.debug"
    },
    {
        "key": "ctrl+shift+e",
        "command": "workbench.view.explorer"
    },
    {
        "key": "ctrl+shift+x",
        "command": "workbench.view.extensions"
    },
    {
        "key": "ctrl+shift+g",
        "command": "workbench.view.git"
    },
    {
        "key": "ctrl+k z",
        "command": "workbench.action.toggleZenMode"
    },
    {
        "key": "alt+=",
        "command": "alignment.align",
        "when": "editorHasSelection"
    },
    {
        "key": "ctrl+alt+d ctrl+alt+c",
        "command": "docthis.documentThis"
    },
    {
        "key": "shift+alt+=",
        "command": "alignment.alignFirst",
        "when": "editorHasSelection"
    },
    {
        "key": "ctrl+shift+alt+=",
        "command": "alignment.alignWhitespace",
        "when": "editorHasSelection"
    },
    {
        "key": "ctrl+alt+d left",
        "command": "deleteAllLeft"
    },
    {
        "key": "ctrl+alt+d right",
        "command": "deleteAllRight"
    },
    {
        "key": "ctrl+alt+d l",
        "command": "deleteWordEndLeft"
    },
    {
        "key": "ctrl+alt+d m",
        "command": "deleteWordEndRight"
    },
    {
        "key": "ctrl+alt+d j",
        "command": "deleteWordStartLeft"
    },
    {
        "key": "ctrl+alt+d k",
        "command": "deleteWordStartRight"
    },
    {
        "key": "ctrl+alt+u",
        "command": "editor.emmet.action.decrementNumberByOne"
    },
    {
        "key": "ctrl+alt+i",
        "command": "editor.emmet.action.incrementNumberByOne"
    },
    {
        "key": "ctrl+alt+u j",
        "command": "editor.emmet.action.decrementNumberByOneTenth"
    },
    {
        "key": "ctrl+alt+i k",
        "command": "editor.emmet.action.incrementNumberByOneTenth"
    },
    {
        "key": "ctrl+alt+u y",
        "command": "editor.emmet.action.decrementNumberByTen"
    }
]

// - editor.emmet.action.decrementNumberByOneTenth
// - editor.emmet.action.decrementNumberByTen
// - editor.emmet.action.evaluateMath
// - editor.emmet.action.incrementNumberByOneTenth
// - editor.emmet.action.incrementNumberByTen
