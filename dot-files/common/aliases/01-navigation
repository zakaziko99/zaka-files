# NAVIGATION ALIASES
# ==================

alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias ~='cd ~'
alias home='cd ~'
alias back='cd -'
alias cc='clear'

alias mkdir='mkdir -pv' # Useful when you run: mkdir dir1/dir2 knowing that the two directoreis
                        # does not exist, the command will create both directories

take () {
    if [[ -n $1 ]]; then
        if [ ! -d $1 ]; then
            mkdir $1
        fi
        cd $1
    else
        echo 'You must provide a name for the new directory'
    fi
}

p () {
    if [[ -n $MY_PROJECTS_FOLDER ]]; then
        if [[ -d $MY_PROJECTS_FOLDER ]]; then
            cd $MY_PROJECTS_FOLDER
            if [[ -n $1 ]]; then
                # The flag 'f' to disable colors
                # The flag 'd' to show only directories on 'MY_PROJECTS_FOLDER'
                local SEARCH_PROJECT=$(ls -fd * | grep $1)
                local NB_SEARCH_PROJECT=$(wc -l <<< "${SEARCH_PROJECT}")
                local TMP_SEARCH_PROJECT=''

                if [[ $NB_SEARCH_PROJECT -gt 1 ]]; then
                    echo "The keyword '$1' is not too specific, please be more specific with another keyword"
                    for fIndex in 0 .. $((NB_SEARCH_PROJECT - 1)); do
                        TMP_SEARCH_PROJECT=${SEARCH_PROJECT[$fIndex]}
                        #echo "**$fIndex**"
                        echo ${TMP_SEARCH_PROJECT:2}
                    done
                else
                    TMP_SEARCH_PROJECT=${SEARCH_PROJECT[0]}
                    if [[ -z $TMP_SEARCH_PROJECT ]]; then
                        echo "There is no project with the keyword '$1', please retry with another keyword"
                    else
                        cd ${TMP_SEARCH_PROJECT:2}
                    fi
                fi
            fi
        else
            echo "The path defined on the variable 'MY_PROJECTS_FOLDER' does not exist"
        fi
    else
        echo "You must define the variable 'MY_PROJECTS_FOLDER' in your private aliases file"
    fi
}
